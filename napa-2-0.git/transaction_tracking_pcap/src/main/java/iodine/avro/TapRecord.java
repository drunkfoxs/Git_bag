/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package iodine.avro;  
@SuppressWarnings("all")
/** PCAP Records from container interfaces */
@org.apache.avro.specific.AvroGenerated
public class TapRecord extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"TapRecord\",\"namespace\":\"iodine.avro\",\"doc\":\"PCAP Records from container interfaces\",\"fields\":[{\"name\":\"bm_space_id\",\"type\":\"string\"},{\"name\":\"tap_interface\",\"type\":\"string\"},{\"name\":\"tap_host\",\"type\":\"string\"},{\"name\":\"tap_interval\",\"type\":\"int\"},{\"name\":\"tap_time\",\"type\":\"double\"},{\"name\":\"tap_data\",\"type\":\"bytes\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence bm_space_id;
  @Deprecated public java.lang.CharSequence tap_interface;
  @Deprecated public java.lang.CharSequence tap_host;
  @Deprecated public int tap_interval;
  @Deprecated public double tap_time;
  @Deprecated public java.nio.ByteBuffer tap_data;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public TapRecord() {}

  /**
   * All-args constructor.
   */
  public TapRecord(java.lang.CharSequence bm_space_id, java.lang.CharSequence tap_interface, java.lang.CharSequence tap_host, java.lang.Integer tap_interval, java.lang.Double tap_time, java.nio.ByteBuffer tap_data) {
    this.bm_space_id = bm_space_id;
    this.tap_interface = tap_interface;
    this.tap_host = tap_host;
    this.tap_interval = tap_interval;
    this.tap_time = tap_time;
    this.tap_data = tap_data;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return bm_space_id;
    case 1: return tap_interface;
    case 2: return tap_host;
    case 3: return tap_interval;
    case 4: return tap_time;
    case 5: return tap_data;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: bm_space_id = (java.lang.CharSequence)value$; break;
    case 1: tap_interface = (java.lang.CharSequence)value$; break;
    case 2: tap_host = (java.lang.CharSequence)value$; break;
    case 3: tap_interval = (java.lang.Integer)value$; break;
    case 4: tap_time = (java.lang.Double)value$; break;
    case 5: tap_data = (java.nio.ByteBuffer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'bm_space_id' field.
   */
  public java.lang.CharSequence getBmSpaceId() {
    return bm_space_id;
  }

  /**
   * Sets the value of the 'bm_space_id' field.
   * @param value the value to set.
   */
  public void setBmSpaceId(java.lang.CharSequence value) {
    this.bm_space_id = value;
  }

  /**
   * Gets the value of the 'tap_interface' field.
   */
  public java.lang.CharSequence getTapInterface() {
    return tap_interface;
  }

  /**
   * Sets the value of the 'tap_interface' field.
   * @param value the value to set.
   */
  public void setTapInterface(java.lang.CharSequence value) {
    this.tap_interface = value;
  }

  /**
   * Gets the value of the 'tap_host' field.
   */
  public java.lang.CharSequence getTapHost() {
    return tap_host;
  }

  /**
   * Sets the value of the 'tap_host' field.
   * @param value the value to set.
   */
  public void setTapHost(java.lang.CharSequence value) {
    this.tap_host = value;
  }

  /**
   * Gets the value of the 'tap_interval' field.
   */
  public java.lang.Integer getTapInterval() {
    return tap_interval;
  }

  /**
   * Sets the value of the 'tap_interval' field.
   * @param value the value to set.
   */
  public void setTapInterval(java.lang.Integer value) {
    this.tap_interval = value;
  }

  /**
   * Gets the value of the 'tap_time' field.
   */
  public java.lang.Double getTapTime() {
    return tap_time;
  }

  /**
   * Sets the value of the 'tap_time' field.
   * @param value the value to set.
   */
  public void setTapTime(java.lang.Double value) {
    this.tap_time = value;
  }

  /**
   * Gets the value of the 'tap_data' field.
   */
  public java.nio.ByteBuffer getTapData() {
    return tap_data;
  }

  /**
   * Sets the value of the 'tap_data' field.
   * @param value the value to set.
   */
  public void setTapData(java.nio.ByteBuffer value) {
    this.tap_data = value;
  }

  /** Creates a new TapRecord RecordBuilder */
  public static iodine.avro.TapRecord.Builder newBuilder() {
    return new iodine.avro.TapRecord.Builder();
  }
  
  /** Creates a new TapRecord RecordBuilder by copying an existing Builder */
  public static iodine.avro.TapRecord.Builder newBuilder(iodine.avro.TapRecord.Builder other) {
    return new iodine.avro.TapRecord.Builder(other);
  }
  
  /** Creates a new TapRecord RecordBuilder by copying an existing TapRecord instance */
  public static iodine.avro.TapRecord.Builder newBuilder(iodine.avro.TapRecord other) {
    return new iodine.avro.TapRecord.Builder(other);
  }
  
  /**
   * RecordBuilder for TapRecord instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<TapRecord>
    implements org.apache.avro.data.RecordBuilder<TapRecord> {

    private java.lang.CharSequence bm_space_id;
    private java.lang.CharSequence tap_interface;
    private java.lang.CharSequence tap_host;
    private int tap_interval;
    private double tap_time;
    private java.nio.ByteBuffer tap_data;

    /** Creates a new Builder */
    private Builder() {
      super(iodine.avro.TapRecord.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(iodine.avro.TapRecord.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.bm_space_id)) {
        this.bm_space_id = data().deepCopy(fields()[0].schema(), other.bm_space_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.tap_interface)) {
        this.tap_interface = data().deepCopy(fields()[1].schema(), other.tap_interface);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.tap_host)) {
        this.tap_host = data().deepCopy(fields()[2].schema(), other.tap_host);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.tap_interval)) {
        this.tap_interval = data().deepCopy(fields()[3].schema(), other.tap_interval);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.tap_time)) {
        this.tap_time = data().deepCopy(fields()[4].schema(), other.tap_time);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.tap_data)) {
        this.tap_data = data().deepCopy(fields()[5].schema(), other.tap_data);
        fieldSetFlags()[5] = true;
      }
    }
    
    /** Creates a Builder by copying an existing TapRecord instance */
    private Builder(iodine.avro.TapRecord other) {
            super(iodine.avro.TapRecord.SCHEMA$);
      if (isValidValue(fields()[0], other.bm_space_id)) {
        this.bm_space_id = data().deepCopy(fields()[0].schema(), other.bm_space_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.tap_interface)) {
        this.tap_interface = data().deepCopy(fields()[1].schema(), other.tap_interface);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.tap_host)) {
        this.tap_host = data().deepCopy(fields()[2].schema(), other.tap_host);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.tap_interval)) {
        this.tap_interval = data().deepCopy(fields()[3].schema(), other.tap_interval);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.tap_time)) {
        this.tap_time = data().deepCopy(fields()[4].schema(), other.tap_time);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.tap_data)) {
        this.tap_data = data().deepCopy(fields()[5].schema(), other.tap_data);
        fieldSetFlags()[5] = true;
      }
    }

    /** Gets the value of the 'bm_space_id' field */
    public java.lang.CharSequence getBmSpaceId() {
      return bm_space_id;
    }
    
    /** Sets the value of the 'bm_space_id' field */
    public iodine.avro.TapRecord.Builder setBmSpaceId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.bm_space_id = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'bm_space_id' field has been set */
    public boolean hasBmSpaceId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'bm_space_id' field */
    public iodine.avro.TapRecord.Builder clearBmSpaceId() {
      bm_space_id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'tap_interface' field */
    public java.lang.CharSequence getTapInterface() {
      return tap_interface;
    }
    
    /** Sets the value of the 'tap_interface' field */
    public iodine.avro.TapRecord.Builder setTapInterface(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.tap_interface = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'tap_interface' field has been set */
    public boolean hasTapInterface() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'tap_interface' field */
    public iodine.avro.TapRecord.Builder clearTapInterface() {
      tap_interface = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'tap_host' field */
    public java.lang.CharSequence getTapHost() {
      return tap_host;
    }
    
    /** Sets the value of the 'tap_host' field */
    public iodine.avro.TapRecord.Builder setTapHost(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.tap_host = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'tap_host' field has been set */
    public boolean hasTapHost() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'tap_host' field */
    public iodine.avro.TapRecord.Builder clearTapHost() {
      tap_host = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'tap_interval' field */
    public java.lang.Integer getTapInterval() {
      return tap_interval;
    }
    
    /** Sets the value of the 'tap_interval' field */
    public iodine.avro.TapRecord.Builder setTapInterval(int value) {
      validate(fields()[3], value);
      this.tap_interval = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'tap_interval' field has been set */
    public boolean hasTapInterval() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'tap_interval' field */
    public iodine.avro.TapRecord.Builder clearTapInterval() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'tap_time' field */
    public java.lang.Double getTapTime() {
      return tap_time;
    }
    
    /** Sets the value of the 'tap_time' field */
    public iodine.avro.TapRecord.Builder setTapTime(double value) {
      validate(fields()[4], value);
      this.tap_time = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'tap_time' field has been set */
    public boolean hasTapTime() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'tap_time' field */
    public iodine.avro.TapRecord.Builder clearTapTime() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'tap_data' field */
    public java.nio.ByteBuffer getTapData() {
      return tap_data;
    }
    
    /** Sets the value of the 'tap_data' field */
    public iodine.avro.TapRecord.Builder setTapData(java.nio.ByteBuffer value) {
      validate(fields()[5], value);
      this.tap_data = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'tap_data' field has been set */
    public boolean hasTapData() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'tap_data' field */
    public iodine.avro.TapRecord.Builder clearTapData() {
      tap_data = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    public TapRecord build() {
      try {
        TapRecord record = new TapRecord();
        record.bm_space_id = fieldSetFlags()[0] ? this.bm_space_id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.tap_interface = fieldSetFlags()[1] ? this.tap_interface : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.tap_host = fieldSetFlags()[2] ? this.tap_host : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.tap_interval = fieldSetFlags()[3] ? this.tap_interval : (java.lang.Integer) defaultValue(fields()[3]);
        record.tap_time = fieldSetFlags()[4] ? this.tap_time : (java.lang.Double) defaultValue(fields()[4]);
        record.tap_data = fieldSetFlags()[5] ? this.tap_data : (java.nio.ByteBuffer) defaultValue(fields()[5]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
